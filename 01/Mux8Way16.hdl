// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    Mux(a=a[0], b=e[0], sel=sel[2], out=mux-ae-0);
    Mux(a=a[1], b=e[1], sel=sel[2], out=mux-ae-1);
    Mux(a=a[2], b=e[2], sel=sel[2], out=mux-ae-2);
    Mux(a=a[3], b=e[3], sel=sel[2], out=mux-ae-3);
    Mux(a=a[4], b=e[4], sel=sel[2], out=mux-ae-4);
    Mux(a=a[5], b=e[5], sel=sel[2], out=mux-ae-5);
    Mux(a=a[6], b=e[6], sel=sel[2], out=mux-ae-6);
    Mux(a=a[7], b=e[7], sel=sel[2], out=mux-ae-7);
    Mux(a=a[8], b=e[8], sel=sel[2], out=mux-ae-8);
    Mux(a=a[9], b=e[9], sel=sel[2], out=mux-ae-9);
    Mux(a=a[10], b=e[10], sel=sel[2], out=mux-ae-10);
    Mux(a=a[11], b=e[11], sel=sel[2], out=mux-ae-11);
    Mux(a=a[12], b=e[12], sel=sel[2], out=mux-ae-12);
    Mux(a=a[13], b=e[13], sel=sel[2], out=mux-ae-13);
    Mux(a=a[14], b=e[14], sel=sel[2], out=mux-ae-14);
    Mux(a=a[15], b=e[15], sel=sel[2], out=mux-ae-15);

    Mux(a=b[0], b=f[0], sel=sel[2], out=mux-bf-0);
    Mux(a=b[1], b=f[1], sel=sel[2], out=mux-bf-1);
    Mux(a=b[2], b=f[2], sel=sel[2], out=mux-bf-2);
    Mux(a=b[3], b=f[3], sel=sel[2], out=mux-bf-3);
    Mux(a=b[4], b=f[4], sel=sel[2], out=mux-bf-4);
    Mux(a=b[5], b=f[5], sel=sel[2], out=mux-bf-5);
    Mux(a=b[6], b=f[6], sel=sel[2], out=mux-bf-6);
    Mux(a=b[7], b=f[7], sel=sel[2], out=mux-bf-7);
    Mux(a=b[8], b=f[8], sel=sel[2], out=mux-bf-8);
    Mux(a=b[9], b=f[9], sel=sel[2], out=mux-bf-9);
    Mux(a=b[10], b=f[10], sel=sel[2], out=mux-bf-10);
    Mux(a=b[11], b=f[11], sel=sel[2], out=mux-bf-11);
    Mux(a=b[12], b=f[12], sel=sel[2], out=mux-bf-12);
    Mux(a=b[13], b=f[13], sel=sel[2], out=mux-bf-13);
    Mux(a=b[14], b=f[14], sel=sel[2], out=mux-bf-14);
    Mux(a=b[15], b=f[15], sel=sel[2], out=mux-bf-15);

    Mux(a=c[0], b=g[0], sel=sel[2], out=mux-cg-0);
    Mux(a=c[1], b=g[1], sel=sel[2], out=mux-cg-1);
    Mux(a=c[2], b=g[2], sel=sel[2], out=mux-cg-2);
    Mux(a=c[3], b=g[3], sel=sel[2], out=mux-cg-3);
    Mux(a=c[4], b=g[4], sel=sel[2], out=mux-cg-4);
    Mux(a=c[5], b=g[5], sel=sel[2], out=mux-cg-5);
    Mux(a=c[6], b=g[6], sel=sel[2], out=mux-cg-6);
    Mux(a=c[7], b=g[7], sel=sel[2], out=mux-cg-7);
    Mux(a=c[8], b=g[8], sel=sel[2], out=mux-cg-8);
    Mux(a=c[9], b=g[9], sel=sel[2], out=mux-cg-9);
    Mux(a=c[10], b=g[10], sel=sel[2], out=mux-cg-10);
    Mux(a=c[11], b=g[11], sel=sel[2], out=mux-cg-11);
    Mux(a=c[12], b=g[12], sel=sel[2], out=mux-cg-12);
    Mux(a=c[13], b=g[13], sel=sel[2], out=mux-cg-13);
    Mux(a=c[14], b=g[14], sel=sel[2], out=mux-cg-14);
    Mux(a=c[15], b=g[15], sel=sel[2], out=mux-cg-15);

    Mux(a=d[0], b=h[0], sel=sel[2], out=mux-dh-0);
    Mux(a=d[1], b=h[1], sel=sel[2], out=mux-dh-1);
    Mux(a=d[2], b=h[2], sel=sel[2], out=mux-dh-2);
    Mux(a=d[3], b=h[3], sel=sel[2], out=mux-dh-3);
    Mux(a=d[4], b=h[4], sel=sel[2], out=mux-dh-4);
    Mux(a=d[5], b=h[5], sel=sel[2], out=mux-dh-5);
    Mux(a=d[6], b=h[6], sel=sel[2], out=mux-dh-6);
    Mux(a=d[7], b=h[7], sel=sel[2], out=mux-dh-7);
    Mux(a=d[8], b=h[8], sel=sel[2], out=mux-dh-8);
    Mux(a=d[9], b=h[9], sel=sel[2], out=mux-dh-9);
    Mux(a=d[10], b=h[10], sel=sel[2], out=mux-dh-10);
    Mux(a=d[11], b=h[11], sel=sel[2], out=mux-dh-11);
    Mux(a=d[12], b=h[12], sel=sel[2], out=mux-dh-12);
    Mux(a=d[13], b=h[13], sel=sel[2], out=mux-dh-13);
    Mux(a=d[14], b=h[14], sel=sel[2], out=mux-dh-14);
    Mux(a=d[15], b=h[15], sel=sel[2], out=mux-dh-15);

    Mux(a=mux-ae-0, b=mux-cg-0, sel=sel[1], out=mux-aceg-0);
    Mux(a=mux-ae-1, b=mux-cg-1, sel=sel[1], out=mux-aceg-1);
    Mux(a=mux-ae-2, b=mux-cg-2, sel=sel[1], out=mux-aceg-2);
    Mux(a=mux-ae-3, b=mux-cg-3, sel=sel[1], out=mux-aceg-3);
    Mux(a=mux-ae-4, b=mux-cg-4, sel=sel[1], out=mux-aceg-4);
    Mux(a=mux-ae-5, b=mux-cg-5, sel=sel[1], out=mux-aceg-5);
    Mux(a=mux-ae-6, b=mux-cg-6, sel=sel[1], out=mux-aceg-6);
    Mux(a=mux-ae-7, b=mux-cg-7, sel=sel[1], out=mux-aceg-7);
    Mux(a=mux-ae-8, b=mux-cg-8, sel=sel[1], out=mux-aceg-8);
    Mux(a=mux-ae-9, b=mux-cg-9, sel=sel[1], out=mux-aceg-9);
    Mux(a=mux-ae-10, b=mux-cg-10, sel=sel[1], out=mux-aceg-10);
    Mux(a=mux-ae-11, b=mux-cg-11, sel=sel[1], out=mux-aceg-11);
    Mux(a=mux-ae-12, b=mux-cg-12, sel=sel[1], out=mux-aceg-12);
    Mux(a=mux-ae-13, b=mux-cg-13, sel=sel[1], out=mux-aceg-13);
    Mux(a=mux-ae-14, b=mux-cg-14, sel=sel[1], out=mux-aceg-14);
    Mux(a=mux-ae-15, b=mux-cg-15, sel=sel[1], out=mux-aceg-15);

    Mux(a=mux-bf-0, b=mux-dh-0, sel=sel[1], out=mux-bdfh-0);
    Mux(a=mux-bf-1, b=mux-dh-1, sel=sel[1], out=mux-bdfh-1);
    Mux(a=mux-bf-2, b=mux-dh-2, sel=sel[1], out=mux-bdfh-2);
    Mux(a=mux-bf-3, b=mux-dh-3, sel=sel[1], out=mux-bdfh-3);
    Mux(a=mux-bf-4, b=mux-dh-4, sel=sel[1], out=mux-bdfh-4);
    Mux(a=mux-bf-5, b=mux-dh-5, sel=sel[1], out=mux-bdfh-5);
    Mux(a=mux-bf-6, b=mux-dh-6, sel=sel[1], out=mux-bdfh-6);
    Mux(a=mux-bf-7, b=mux-dh-7, sel=sel[1], out=mux-bdfh-7);
    Mux(a=mux-bf-8, b=mux-dh-8, sel=sel[1], out=mux-bdfh-8);
    Mux(a=mux-bf-9, b=mux-dh-9, sel=sel[1], out=mux-bdfh-9);
    Mux(a=mux-bf-10, b=mux-dh-10, sel=sel[1], out=mux-bdfh-10);
    Mux(a=mux-bf-11, b=mux-dh-11, sel=sel[1], out=mux-bdfh-11);
    Mux(a=mux-bf-12, b=mux-dh-12, sel=sel[1], out=mux-bdfh-12);
    Mux(a=mux-bf-13, b=mux-dh-13, sel=sel[1], out=mux-bdfh-13);
    Mux(a=mux-bf-14, b=mux-dh-14, sel=sel[1], out=mux-bdfh-14);
    Mux(a=mux-bf-15, b=mux-dh-15, sel=sel[1], out=mux-bdfh-15);

    Mux(a=mux-aceg-0, b=mux-bdfh-0, sel=sel[0], out=out[0]);
    Mux(a=mux-aceg-1, b=mux-bdfh-1, sel=sel[0], out=out[1]);
    Mux(a=mux-aceg-2, b=mux-bdfh-2, sel=sel[0], out=out[2]);
    Mux(a=mux-aceg-3, b=mux-bdfh-3, sel=sel[0], out=out[3]);
    Mux(a=mux-aceg-4, b=mux-bdfh-4, sel=sel[0], out=out[4]);
    Mux(a=mux-aceg-5, b=mux-bdfh-5, sel=sel[0], out=out[5]);
    Mux(a=mux-aceg-6, b=mux-bdfh-6, sel=sel[0], out=out[6]);
    Mux(a=mux-aceg-7, b=mux-bdfh-7, sel=sel[0], out=out[7]);
    Mux(a=mux-aceg-8, b=mux-bdfh-8, sel=sel[0], out=out[8]);
    Mux(a=mux-aceg-9, b=mux-bdfh-9, sel=sel[0], out=out[9]);
    Mux(a=mux-aceg-10, b=mux-bdfh-10, sel=sel[0], out=out[10]);
    Mux(a=mux-aceg-11, b=mux-bdfh-11, sel=sel[0], out=out[11]);
    Mux(a=mux-aceg-12, b=mux-bdfh-12, sel=sel[0], out=out[12]);
    Mux(a=mux-aceg-13, b=mux-bdfh-13, sel=sel[0], out=out[13]);
    Mux(a=mux-aceg-14, b=mux-bdfh-14, sel=sel[0], out=out[14]);
    Mux(a=mux-aceg-15, b=mux-bdfh-15, sel=sel[0], out=out[15]);
}
