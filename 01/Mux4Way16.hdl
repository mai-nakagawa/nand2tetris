// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    Mux(a=a[0], b=c[0], sel=sel[1], out=mux-ac-0);
    Mux(a=a[1], b=c[1], sel=sel[1], out=mux-ac-1);
    Mux(a=a[2], b=c[2], sel=sel[1], out=mux-ac-2);
    Mux(a=a[3], b=c[3], sel=sel[1], out=mux-ac-3);
    Mux(a=a[4], b=c[4], sel=sel[1], out=mux-ac-4);
    Mux(a=a[5], b=c[5], sel=sel[1], out=mux-ac-5);
    Mux(a=a[6], b=c[6], sel=sel[1], out=mux-ac-6);
    Mux(a=a[7], b=c[7], sel=sel[1], out=mux-ac-7);
    Mux(a=a[8], b=c[8], sel=sel[1], out=mux-ac-8);
    Mux(a=a[9], b=c[9], sel=sel[1], out=mux-ac-9);
    Mux(a=a[10], b=c[10], sel=sel[1], out=mux-ac-10);
    Mux(a=a[11], b=c[11], sel=sel[1], out=mux-ac-11);
    Mux(a=a[12], b=c[12], sel=sel[1], out=mux-ac-12);
    Mux(a=a[13], b=c[13], sel=sel[1], out=mux-ac-13);
    Mux(a=a[14], b=c[14], sel=sel[1], out=mux-ac-14);
    Mux(a=a[15], b=c[15], sel=sel[1], out=mux-ac-15);
    Mux(a=b[0], b=d[0], sel=sel[1], out=mux-bd-0);
    Mux(a=b[1], b=d[1], sel=sel[1], out=mux-bd-1);
    Mux(a=b[2], b=d[2], sel=sel[1], out=mux-bd-2);
    Mux(a=b[3], b=d[3], sel=sel[1], out=mux-bd-3);
    Mux(a=b[4], b=d[4], sel=sel[1], out=mux-bd-4);
    Mux(a=b[5], b=d[5], sel=sel[1], out=mux-bd-5);
    Mux(a=b[6], b=d[6], sel=sel[1], out=mux-bd-6);
    Mux(a=b[7], b=d[7], sel=sel[1], out=mux-bd-7);
    Mux(a=b[8], b=d[8], sel=sel[1], out=mux-bd-8);
    Mux(a=b[9], b=d[9], sel=sel[1], out=mux-bd-9);
    Mux(a=b[10], b=d[10], sel=sel[1], out=mux-bd-10);
    Mux(a=b[11], b=d[11], sel=sel[1], out=mux-bd-11);
    Mux(a=b[12], b=d[12], sel=sel[1], out=mux-bd-12);
    Mux(a=b[13], b=d[13], sel=sel[1], out=mux-bd-13);
    Mux(a=b[14], b=d[14], sel=sel[1], out=mux-bd-14);
    Mux(a=b[15], b=d[15], sel=sel[1], out=mux-bd-15);
    Mux(a=mux-ac-0, b=mux-bd-0, sel=sel[0], out=out[0]);
    Mux(a=mux-ac-1, b=mux-bd-1, sel=sel[0], out=out[1]);
    Mux(a=mux-ac-2, b=mux-bd-2, sel=sel[0], out=out[2]);
    Mux(a=mux-ac-3, b=mux-bd-3, sel=sel[0], out=out[3]);
    Mux(a=mux-ac-4, b=mux-bd-4, sel=sel[0], out=out[4]);
    Mux(a=mux-ac-5, b=mux-bd-5, sel=sel[0], out=out[5]);
    Mux(a=mux-ac-6, b=mux-bd-6, sel=sel[0], out=out[6]);
    Mux(a=mux-ac-7, b=mux-bd-7, sel=sel[0], out=out[7]);
    Mux(a=mux-ac-8, b=mux-bd-8, sel=sel[0], out=out[8]);
    Mux(a=mux-ac-9, b=mux-bd-9, sel=sel[0], out=out[9]);
    Mux(a=mux-ac-10, b=mux-bd-10, sel=sel[0], out=out[10]);
    Mux(a=mux-ac-11, b=mux-bd-11, sel=sel[0], out=out[11]);
    Mux(a=mux-ac-12, b=mux-bd-12, sel=sel[0], out=out[12]);
    Mux(a=mux-ac-13, b=mux-bd-13, sel=sel[0], out=out[13]);
    Mux(a=mux-ac-14, b=mux-bd-14, sel=sel[0], out=out[14]);
    Mux(a=mux-ac-15, b=mux-bd-15, sel=sel[0], out=out[15]);
}
